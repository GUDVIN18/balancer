from django.core.management.base import BaseCommand
from django.conf import settings
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from apps.bot_app.models import TelegramBotConfig
from apps.bot_app.command_handlers import handle_send_photo
from apps.stickers.stickers_command import photo_to_sticker
import logging



def start(bot, message):
    keyboard = InlineKeyboardMarkup()
    keyboard.row(InlineKeyboardButton("1", callback_data="photo_1"))
    keyboard.row(InlineKeyboardButton("2", callback_data="photo_2"))
    keyboard.row(InlineKeyboardButton("3", callback_data="photo_3"))

    bot.send_photo(message.chat.id, photo=open('/home/dmitriy/SD/face_to_face_server/face_to_face_server_0/face_to_face_server0/media/main/main_photo.jpg', 'rb'))
    bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤—ã–±–µ—Ä–µ—Ç–µ —Ñ–æ—Ç–æ", reply_markup=keyboard)



def callback_query(bot, call):
    chat_id = call.message.chat.id
    message_id = call.message.message_id
    data_parts = call.data.split('_')
    data_parts_new_photo = call.data
    print(data_parts)
    
    if data_parts[0] == "photo":
        handle_send_photo(bot, data_parts, chat_id)

    if data_parts[0] == "pack":
        text = '''
–ó–∞–≥—Ä—É–∑–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é.

<b>–°–ª–µ–¥—É–π—Ç–µ —Å–æ–≤–µ—Ç–∞–º:</b>
‚Äî –Ω–∞ —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–æ—Ä–æ—à–æ –≤–∏–¥–Ω–æ –≤–∞—à–µ –ª–∏—Ü–æ;
‚Äî –Ω–∞ —Ñ–æ—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥—Ä—É–≥–∏—Ö –ª–∏—Ü, –∫—Ä–æ–º–µ –≤–∞—à–µ–≥–æ;
‚Äî –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –±–µ–∑ –≥–æ–ª–æ–≤–Ω–æ–≥–æ —É–±–æ—Ä–∞ –∏ –æ—á–∫–æ–≤;
‚Äî –µ—Å–ª–∏ –≤—ã –Ω–æ—Å–∏—Ç–µ –æ—á–∫–∏, —Ç–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ –±–µ–∑ –Ω–∏—Ö;
‚Äî –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö, –±–æ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Ç–æ–ª—å–∫–æ –ª–∏—Ü–∞ –ª—é–¥–µ–π.

–û–±—ã—á–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 5 –º–∏–Ω—É—Ç. –ù–æ –ø—Ä–∏ –±–æ–ª—å—à–æ–π –æ—á–µ—Ä–µ–¥–∏ –ø—Ä–∏–¥–µ—Ç—Å—è –ø–æ–¥–æ–∂–¥–∞—Ç—å –¥–æ–ª—å—à–µ ü•π
'''
        name_sticer_pak = data_parts[1]
        logging.info(f'name_sticer_pak - {name_sticer_pak}')
        a = bot.send_message(call.message.chat.id, text, parse_mode='HTML')
        bot.register_next_step_handler(a, lambda message: photo_to_sticker(bot, message, name_sticer_pak))

    elif data_parts_new_photo == "new_generate":
        start(bot, call.message)

    else:
        bot.answer_callback_query(call.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö")